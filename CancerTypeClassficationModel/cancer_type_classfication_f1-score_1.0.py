# -*- coding: utf-8 -*-
"""AI_FinalProject_2017243080.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12rWZmKlhp08Gf9jg7EIRhiE-71G3whIS
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report
from sklearn.impute import SimpleImputer
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler, LabelEncoder
import numpy as np
import joblib

# CSV 파일 불러오기
data = pd.read_csv('/content/drive/MyDrive/2023 AI/TRAIN TEST/TRAIN_V1.csv')

# 학습에 사용할 특성 선택 (나이, 유전체 정보)
features = [col for col in data.columns if col not in ['PATIENT_ID', 'CANCER_TYPE_ACRONYM']]

# 암 종류를 예측할 타겟 선택
target = 'CANCER_TYPE_ACRONYM'

# 특성과 타겟 데이터 분할
X = data[features]
y = data[target]

preprocessor = ColumnTransformer([
    ('num_imputer', SimpleImputer(strategy='mean'), [col for col in data.columns if col not in ['PATIENT_ID', 'CANCER_TYPE_ACRONYM', 'SEX']]),
    ('cat_imputer', SimpleImputer(strategy='most_frequent'), ['SEX']),
])

# SEX 열을 숫자로 변환하기 위한 LabelEncoder 생성
sex_encoder = LabelEncoder()

# SEX 열 변환을 위한 라벨 인코딩
X['SEX'] = sex_encoder.fit_transform(X['SEX'])

# 머신 러닝 파이프라인 생성
pipeline = Pipeline([
    ('preprocessor', preprocessor),
    ('scaler', StandardScaler(with_mean=False)),
    ('classifier', RandomForestClassifier()),
])

# 데이터를 학습 세트와 테스트 세트로 분할
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)

# 모델 학습
pipeline.fit(X_train, y_train)

# 학습된 모델로 테스트 데이터 예측
predictions = pipeline.predict(X_test)

# 분류 보고서 출력
print(classification_report(y_test, predictions))

# 학습된 모델 저장
joblib.dump(pipeline, 'cancer_prediction_model.joblib')

# 새로운 데이터 파일 불러오기
new_data = pd.read_csv('/content/drive/MyDrive/2023 AI/TRAIN TEST/TEST_V1.csv')


# 예측에 사용할 특성 선택
new_features = [col for col in data.columns if col not in ['PATIENT_ID', 'CANCER_TYPE_ACRONYM']]
# SEX 열 변환을 위한 라벨 인코딩
new_data['SEX'] = sex_encoder.transform(new_data['SEX'])
# 새로운 데이터 예측
new_predictions = pipeline.predict(new_data[new_features])

# 예측 결과 출력
print(new_predictions)

# 예측 결과를 데이터프레임으로 생성
predictions_df = pd.DataFrame({'id': new_data['PATIENT_ID'], 'expected': new_predictions})

# 예측 결과를 CSV 파일로 저장
predictions_df.to_csv('/content/drive/MyDrive/2023 AI/TRAIN TEST/predicted_results_F2.csv')